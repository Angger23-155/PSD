Traceback (most recent call last):
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/python/3.12.1/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/python/3.12.1/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.decomposition import PCA
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis

# 1. Upload file CSV di Colab
from google.colab import files
uploaded = files.upload()  # pilih file iris.csv

# 2. Baca CSV
df = pd.read_csv("iris (1).csv")

# Kalau kolom masih "COL 1", ubah jadi rapi
if "COL 1" in df.columns:
    df.columns = ["sepal_length", "sepal_width", "petal_length", "petal_width", "Species"]

# 3. Pisahkan fitur & label
X = df.drop("Species", axis=1).values
y = df["Species"].astype("category").cat.codes.values
target_names = df["Species"].unique()

# 4. PCA (2 komponen)
pca = PCA(n_components=2)
X_r = pca.fit(X).transform(X)

# 5. LDA (2 komponen)
lda = LinearDiscriminantAnalysis(n_components=2)
X_r2 = lda.fit(X, y).transform(X)

print("explained variance ratio (first two components): %s"
      % str(pca.explained_variance_ratio_))

# 6. Visualisasi PCA
plt.figure()
colors = ["navy", "turquoise", "darkorange"]
lw = 2
for color, i, target_name in zip(colors, [0, 1, 2], target_names):
    plt.scatter(X_r[y == i, 0], X_r[y == i, 1],
                color=color, alpha=0.8, lw=lw, label=target_name)
plt.legend(loc="best", shadow=False, scatterpoints=1)
plt.title("PCA of IRIS dataset")



------------------


[31m---------------------------------------------------------------------------[39m
[31mModuleNotFoundError[39m                       Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[3][39m[32m, line 7[39m
[32m      4[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01msklearn[39;00m[34;01m.[39;00m[34;01mdiscriminant_analysis[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m LinearDiscriminantAnalysis
[32m      6[39m [38;5;66;03m# 1. Upload file CSV di Colab[39;00m
[32m----> [39m[32m7[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mgoogle[39;00m[34;01m.[39;00m[34;01mcolab[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m files
[32m      8[39m uploaded = files.upload()  [38;5;66;03m# pilih file iris.csv[39;00m
[32m     10[39m [38;5;66;03m# 2. Baca CSV[39;00m

[31mModuleNotFoundError[39m: No module named 'google'

